{"version":3,"sources":["logo.svg","components/style.js","components/Greetings.js","components/TextField.js","components/FirstNameField.js","components/LastNameField.js","components/SimpleForm.js","components/clock.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","style","form","padding","border","backgroundColor","color","inputGroup","marginBottom","input","marginLeft","error","margin","Greetings","_ref","firstName","lastName","react_default","a","createElement","TextField","name","onChange","onBlur","label","type","FirstNameField","rest","Object","esm_extends","components_TextField","assign","LastNameField","SimpleForm","state","firstNameError","lastNameError","validateFirstName","test","validateLastName","onFirstNameBlur","_this","setState","onFirstNameChange","event","target","value","onLastNameBlur","onLastNameChange","_this$state","this","components_FirstNameField","components_LastNameField","components_Greetings","React","Component","Clock","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","date","Date","_this2","timerID","setInterval","tick","clearInterval","toLocaleTimeString","App","className","src","logo","alt","build","sm","components_SimpleForm","clock","md","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2623474.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const style = {\n  form: {\n      padding: 10,\n      border: \"1px solid black\",\n      backgroundColor: \"black\",\n      color: \"white\"\n  },\n  inputGroup: {\n      marginBottom: 10\n  },\n  input: {\n      backgroundColor: \"#EFEFFF\",\n      marginLeft: 10\n  },\n  error: {\n      color: \"red\",\n      margin: 5\n  }\n};\n\nexport default style;\n","import React from \"react\";\n\n// const Greetings = (props) => <div>Hi! My name is: {props.firstName} {props.lastName}.</div>;\n// const Greetings = ({ firstName, lastName }) => <div>Hi! My name is: {firstName} {lastName}.</div>;\n\nconst Greetings = ({ firstName, lastName }) => (\n    <div>\n        Hi! My name is: {firstName} {lastName}.\n    </div>\n);\n\nexport default Greetings;\n","import React from 'react'\nimport style from \"./style\";\n\nconst TextField = ({name, onChange, onBlur, error, label}) => (\n  <div style={style.inputGroup}>\n    <label>\n      {label}\n      <input\n        style={style.input}\n        type=\"text\"\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      {error && <div style={style.error}>{error}</div>}\n    </label>\n  </div>\n);\n\nexport default TextField;\n","import React from 'react';\n\nimport TextField from './TextField';\n\nconst FirstNameField = ({...rest}) => (\n  <TextField name=\"firstName\"\n              label=\"First name:\"\n              {...rest} />\n);\n\nexport default FirstNameField;\n","import React from 'react';\n\nimport TextField from './TextField';\n\nconst LastNameField = ({...rest}) => (\n    <TextField name=\"lastName\"\n                label=\"Last name:\"\n                {...rest} />\n);\n\nexport default LastNameField;\n","import React from \"react\";\nimport style from \"./style\";\nimport Greetings from './Greetings';\nimport FirstNameField from './FirstNameField';\nimport LastNameField from './LastNameField';\n\nclass SimpleForm extends React.Component {\n  state = {\n    firstName: \"\",\n    firstNameError: \"\",\n    lastName: \"\",\n    lastNameError: \"\"\n  };\n\n  validateFirstName = name => {\n    const regex = /[A-Za-z]{3,}/;\n\n    return !regex.test(name)\n      ? \"The name must contain at least three letters. Numbers and special characters are not allowed.\"\n      : \"\";\n  };\n\n  validateLastName = name => {\n    const regex = /[A-Za-z]{1,}/;\n\n    return !regex.test(name)\n      ? \"The name must contain at least three letters. Numbers and special characters are not allowed.\"\n      : \"\";\n  };\n\n  onFirstNameBlur = () => {\n    const { firstName } = this.state;\n\n    const firstNameError = this.validateFirstName(firstName);\n\n    return this.setState({ firstNameError });\n  };\n\n  onFirstNameChange = event =>\n    this.setState({\n      firstName: event.target.value\n    });\n\n  onLastNameBlur = () => {\n    const { lastName } = this.state;\n\n    const lastNameError = this.validateLastName(lastName);\n\n    return this.setState({ lastNameError });\n  };\n\n  onLastNameChange = event =>\n    this.setState({\n      lastName: event.target.value\n    });\n\n  render() {\n    const { firstNameError, firstName, lastName, lastNameError } = this.state;\n\n    return (\n      <div style={style.form}>\n        <FirstNameField onChange={this.onFirstNameChange}\n                        onBlur={this.onFirstNameBlur}\n                        error={firstNameError} />\n\n        <LastNameField onChange={this.onLastNameChange}\n                        onBlur={this.onLastNameBlur}\n                        error={lastNameError} />\n\n        <Greetings firstName={firstName} lastName={lastName} />\n      </div>\n    );\n  }\n}\n\nexport default SimpleForm;\n","import React from 'react';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\n// import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import Greetings from \"./components/Greetings\";\nimport SimpleForm from './components/SimpleForm';\nimport Clock from './components/clock.js';\nimport { Container, Row, Col } from 'react-grid-system'\n\n// Where you add your components (i.e. SimpleForm, Clock, etc...)\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      {/* <Greetings firstName=\"Jacob\" lastName=\"Ong\" /> */}\n    </header>\n    <Container>\n  <Row>\n    <Col sm={4}>\n      <SimpleForm />\n    </Col>\n    <Col sm={4}>\n      <Clock />\n    </Col>\n    <Col sm={4}>\n      One of three columns\n    </Col>\n  </Row>\n  <Row>\n    <Col md={6}>\n    <Clock />\n    </Col>\n    <Col md={6}>\n    One of two columns\n    </Col>\n  </Row>\n</Container>\n\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// To display your App -> Linked to /public/index.html\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}